"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Logger {
  constructor({
    level
  }) {
    const numbered = Number.parseInt(level);
    this.level = Number.isNaN(numbered) ? Logger.LEVELS.ERROR : numbered;
  }

  get now() {
    const date = new Date();
    return date.toLocaleTimeString();
  }

  error(...message) {
    process.stdout.write(`\n\x1b[31m[ ${this.now} ]: ERROR - ${message.map(JSON.stringify).join('\n')}\x1b[0m`);
  }

  warn(...message) {
    if (this.level <= Logger.LEVELS.WARN) process.stdout.write(`\n\x1b[33m[ ${this.now} ]: WARN  - ${message.map(JSON.stringify).join('\n')}\x1b[0m`);
  }

  info(...message) {
    if (this.level <= Logger.LEVELS.INFO) process.stdout.write(`\n\x1b[34m[ ${this.now} ]: INFO  - ${message.map(JSON.stringify).join('\n')}\x1b[0m`);
  }

  debug(...message) {
    if (this.level === Logger.LEVELS.DEBUG) process.stdout.write(`\n[ ${this.now} ]: DEBUG - ${message.map(JSON.stringify).join('\n')}\x1b[0m`);
  }

}

_defineProperty(Logger, "LEVELS", {
  ERROR: 4,
  WARN: 3,
  INFO: 2,
  DEBUG: 1
});

var _default = new Logger({
  level: 1
});

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2dnZXIuanMiXSwibmFtZXMiOlsiTG9nZ2VyIiwiY29uc3RydWN0b3IiLCJsZXZlbCIsIm51bWJlcmVkIiwiTnVtYmVyIiwicGFyc2VJbnQiLCJpc05hTiIsIkxFVkVMUyIsIkVSUk9SIiwibm93IiwiZGF0ZSIsIkRhdGUiLCJ0b0xvY2FsZVRpbWVTdHJpbmciLCJlcnJvciIsIm1lc3NhZ2UiLCJwcm9jZXNzIiwic3Rkb3V0Iiwid3JpdGUiLCJtYXAiLCJKU09OIiwic3RyaW5naWZ5Iiwiam9pbiIsIndhcm4iLCJXQVJOIiwiaW5mbyIsIklORk8iLCJkZWJ1ZyIsIkRFQlVHIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxNQUFNQSxNQUFOLENBQWE7QUFRVEMsRUFBQUEsV0FBVyxDQUFFO0FBQUNDLElBQUFBO0FBQUQsR0FBRixFQUFXO0FBQ2xCLFVBQU1DLFFBQVEsR0FBR0MsTUFBTSxDQUFDQyxRQUFQLENBQWdCSCxLQUFoQixDQUFqQjtBQUNBLFNBQUtBLEtBQUwsR0FBYUUsTUFBTSxDQUFDRSxLQUFQLENBQWFILFFBQWIsSUFBeUJILE1BQU0sQ0FBQ08sTUFBUCxDQUFjQyxLQUF2QyxHQUErQ0wsUUFBNUQ7QUFDSDs7QUFFRCxNQUFJTSxHQUFKLEdBQVU7QUFDTixVQUFNQyxJQUFJLEdBQUcsSUFBSUMsSUFBSixFQUFiO0FBQ0EsV0FBT0QsSUFBSSxDQUFDRSxrQkFBTCxFQUFQO0FBQ0g7O0FBRURDLEVBQUFBLEtBQUssQ0FBQyxHQUFHQyxPQUFKLEVBQWE7QUFDZEMsSUFBQUEsT0FBTyxDQUFDQyxNQUFSLENBQWVDLEtBQWYsQ0FBc0IsZUFBYyxLQUFLUixHQUFJLGVBQWNLLE9BQU8sQ0FBQ0ksR0FBUixDQUFZQyxJQUFJLENBQUNDLFNBQWpCLEVBQTRCQyxJQUE1QixDQUFpQyxJQUFqQyxDQUF1QyxTQUFsRztBQUNIOztBQUVEQyxFQUFBQSxJQUFJLENBQUMsR0FBR1IsT0FBSixFQUFhO0FBQ2IsUUFBRyxLQUFLWixLQUFMLElBQWNGLE1BQU0sQ0FBQ08sTUFBUCxDQUFjZ0IsSUFBL0IsRUFDSVIsT0FBTyxDQUFDQyxNQUFSLENBQWVDLEtBQWYsQ0FBc0IsZUFBYyxLQUFLUixHQUFJLGVBQWNLLE9BQU8sQ0FBQ0ksR0FBUixDQUFZQyxJQUFJLENBQUNDLFNBQWpCLEVBQTRCQyxJQUE1QixDQUFpQyxJQUFqQyxDQUF1QyxTQUFsRztBQUNQOztBQUVERyxFQUFBQSxJQUFJLENBQUMsR0FBR1YsT0FBSixFQUFhO0FBQ2IsUUFBRyxLQUFLWixLQUFMLElBQWNGLE1BQU0sQ0FBQ08sTUFBUCxDQUFja0IsSUFBL0IsRUFDSVYsT0FBTyxDQUFDQyxNQUFSLENBQWVDLEtBQWYsQ0FBc0IsZUFBYyxLQUFLUixHQUFJLGVBQWNLLE9BQU8sQ0FBQ0ksR0FBUixDQUFZQyxJQUFJLENBQUNDLFNBQWpCLEVBQTRCQyxJQUE1QixDQUFpQyxJQUFqQyxDQUF1QyxTQUFsRztBQUNQOztBQUVESyxFQUFBQSxLQUFLLENBQUMsR0FBR1osT0FBSixFQUFhO0FBQ2QsUUFBRyxLQUFLWixLQUFMLEtBQWVGLE1BQU0sQ0FBQ08sTUFBUCxDQUFjb0IsS0FBaEMsRUFDSVosT0FBTyxDQUFDQyxNQUFSLENBQWVDLEtBQWYsQ0FBc0IsT0FBTSxLQUFLUixHQUFJLGVBQWNLLE9BQU8sQ0FBQ0ksR0FBUixDQUFZQyxJQUFJLENBQUNDLFNBQWpCLEVBQTRCQyxJQUE1QixDQUFpQyxJQUFqQyxDQUF1QyxTQUExRjtBQUNQOztBQW5DUTs7Z0JBQVByQixNLFlBQ2M7QUFDWlEsRUFBQUEsS0FBSyxFQUFFLENBREs7QUFFWmUsRUFBQUEsSUFBSSxFQUFFLENBRk07QUFHWkUsRUFBQUEsSUFBSSxFQUFFLENBSE07QUFJWkUsRUFBQUEsS0FBSyxFQUFFO0FBSkssQzs7ZUFxQ0wsSUFBSTNCLE1BQUosQ0FBVztBQUFDRSxFQUFBQSxLQUFLLEVBQUU7QUFBUixDQUFYLEMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBMb2dnZXIge1xyXG4gICAgc3RhdGljIExFVkVMUyA9IHtcclxuICAgICAgICBFUlJPUjogNCxcclxuICAgICAgICBXQVJOOiAzLFxyXG4gICAgICAgIElORk86IDIsXHJcbiAgICAgICAgREVCVUc6IDFcclxuICAgIH1cclxuXHJcbiAgICBjb25zdHJ1Y3RvciAoe2xldmVsfSkge1xyXG4gICAgICAgIGNvbnN0IG51bWJlcmVkID0gTnVtYmVyLnBhcnNlSW50KGxldmVsKVxyXG4gICAgICAgIHRoaXMubGV2ZWwgPSBOdW1iZXIuaXNOYU4obnVtYmVyZWQpID8gTG9nZ2VyLkxFVkVMUy5FUlJPUiA6IG51bWJlcmVkXHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IG5vdygpIHtcclxuICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoKVxyXG4gICAgICAgIHJldHVybiBkYXRlLnRvTG9jYWxlVGltZVN0cmluZygpXHJcbiAgICB9XHJcblxyXG4gICAgZXJyb3IoLi4ubWVzc2FnZSkge1xyXG4gICAgICAgIHByb2Nlc3Muc3Rkb3V0LndyaXRlKGBcXG5cXHgxYlszMW1bICR7dGhpcy5ub3d9IF06IEVSUk9SIC0gJHttZXNzYWdlLm1hcChKU09OLnN0cmluZ2lmeSkuam9pbignXFxuJyl9XFx4MWJbMG1gKVxyXG4gICAgfVxyXG5cclxuICAgIHdhcm4oLi4ubWVzc2FnZSkge1xyXG4gICAgICAgIGlmKHRoaXMubGV2ZWwgPD0gTG9nZ2VyLkxFVkVMUy5XQVJOKVxyXG4gICAgICAgICAgICBwcm9jZXNzLnN0ZG91dC53cml0ZShgXFxuXFx4MWJbMzNtWyAke3RoaXMubm93fSBdOiBXQVJOICAtICR7bWVzc2FnZS5tYXAoSlNPTi5zdHJpbmdpZnkpLmpvaW4oJ1xcbicpfVxceDFiWzBtYClcclxuICAgIH1cclxuXHJcbiAgICBpbmZvKC4uLm1lc3NhZ2UpIHtcclxuICAgICAgICBpZih0aGlzLmxldmVsIDw9IExvZ2dlci5MRVZFTFMuSU5GTylcclxuICAgICAgICAgICAgcHJvY2Vzcy5zdGRvdXQud3JpdGUoYFxcblxceDFiWzM0bVsgJHt0aGlzLm5vd30gXTogSU5GTyAgLSAke21lc3NhZ2UubWFwKEpTT04uc3RyaW5naWZ5KS5qb2luKCdcXG4nKX1cXHgxYlswbWApXHJcbiAgICB9XHJcblxyXG4gICAgZGVidWcoLi4ubWVzc2FnZSkge1xyXG4gICAgICAgIGlmKHRoaXMubGV2ZWwgPT09IExvZ2dlci5MRVZFTFMuREVCVUcpXHJcbiAgICAgICAgICAgIHByb2Nlc3Muc3Rkb3V0LndyaXRlKGBcXG5bICR7dGhpcy5ub3d9IF06IERFQlVHIC0gJHttZXNzYWdlLm1hcChKU09OLnN0cmluZ2lmeSkuam9pbignXFxuJyl9XFx4MWJbMG1gKVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgTG9nZ2VyKHtsZXZlbDogMX0pIl19